<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vp.dao.NodeMapper" >
  <resultMap id="BaseResultMap" type="com.vp.entity.Node" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="node_name" property="nodeName" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, node_name, p_id, `describe`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from node
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getUserDefaultCompanyRoleNodes" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from node
    where id in (
        select node_id from role_node_mapping where role_id=(
                select role_id from user_company where open_id=#{openId} and is_default=1
            )
    )
  </select>
  <select id="getNodeList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from node
    where p_id = #{pid,jdbcType=INTEGER}
  </select>
  <select id="getRoleNodeList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
        n.*
    from node n
    left join role_node_mapping rnm on rnm.node_id=n.id
    where
    rnm.role_id=#{roleId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from node
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vp.entity.Node" >
    insert into node (id, node_name, p_id, 
      describe, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{nodeName,jdbcType=VARCHAR}, #{pId,jdbcType=INTEGER}, 
      #{describe,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vp.entity.Node" >
    insert into node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nodeName != null" >
        node_name,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="describe != null" >
        describe,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null" >
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vp.entity.Node" >
    update node
    <set >
      <if test="nodeName != null" >
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vp.entity.Node" >
    update node
    set node_name = #{nodeName,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=INTEGER},
      describe = #{describe,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>