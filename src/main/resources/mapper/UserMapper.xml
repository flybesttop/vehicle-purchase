<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vp.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.vp.entity.User" >
    <id column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    open_id, avatar_url, username, phone, nickname, gender, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where open_id = #{openId,jdbcType=VARCHAR}
  </select>
  <select id="getDailyCheckUserOpenId" resultType="java.lang.String" parameterType="java.lang.Integer" >
    select
      uc.open_id
    from user_company uc left join role_node_mapping rnm on rnm.role_id = uc.role_id
    where rnm.node_id = 7 and uc.company_id = #{companyId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where open_id = #{openId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.vp.entity.User" >
    insert into user (open_id, avatar_url, username, 
      phone, nickname, gender)
    values (#{openId,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.vp.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        open_id,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="gender != null" >
        gender
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelectiveForLogin" parameterType="com.vp.entity.User" >
    update user
    <set >
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER}
      </if>
    </set>
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vp.entity.User" >
    update user
    <set >
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER}
      </if>
    </set>
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vp.entity.User" >
    update user
    set avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER}
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
</mapper>